%body {
	@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap');
	width: 100vw;
	height: 100vh;
	background-color: $background-color;
	color: $text-color;

	font-family: 'Roboto', sans-serif;
}

%summary {
	font-size: $h2-size;
	font-weight: 600;
	border-radius: $border-radius-small;
	margin: $padding-small/2 $padding/2;
	padding: $padding;
	@extend %selectable;
}

%selectable {
	user-select: none;
	cursor: pointer;
	transition: $fast-animation;
	&:hover {
		background-color: adjust-color($color: $foreground-color, $lightness: 10%);
	}
}

%selected {
	&[aria-selected='true'] {
		background-color: $foreground-color-selected;
		color: $text-color-selected;
		cursor: auto;
	}
}

%y-scroll {
	overflow-y: scroll;
	// Hide the scrollbar
	scrollbar-width: none;
	&::-webkit-scrollbar {
		display: none;
	}
}

%x-scroll {
	overflow-x: scroll;
	// Hide the scrollbar
	scrollbar-width: none;
	&::-webkit-scrollbar {
		display: none;
	}
}

@mixin button($background-color: $foreground-color) {
	text-shadow: $shadow-small;
	box-shadow: $shadow-medium;
	border-radius: $border-radius-medium;
	border: 0;
	color: $text-color;
	cursor: pointer;
	padding-top: $padding/2;
	padding-bottom: $padding/2;
	background-color: $background-color;
	font-weight: 600;
}

%button-hilighted {
	@include button($primary-color);
}

%button-negative {
	@include button();
	color: red;
	@extend %selectable;
}

%card {
	background-color: $foreground-color;
	border-radius: $border-radius-medium;
	padding: $padding;
	box-shadow: $shadow-medium;
}

%input {
	position: relative;
	display: flex;
	background-color: $foreground-color;
	box-shadow: $shadow-medium;
	border-radius: $border-radius-small $border-radius-small 0 0;
	border-bottom: 1px solid $text-color;
	height: 3em;
	align-items: center;
	font-size: $h3-size;
	transition: $fast-animation ease-in-out;

	p {
		position: absolute;
		margin: 0;
		margin-top: 0.5em;
		opacity: 0.7;
		transition: $fast-animation ease-in-out;
		
		&.label {
			transform-origin: left top;
			transform: translate($padding * 2);
			will-change: transform;
		}
		&.unit { right: $padding * 2; }
	}

	input {
		font-size: $h3-size;
		color: $text-color;
		padding-left: $padding * 2;
		margin-top: 0.95em;
		position: absolute;
		background: none;
		outline: none;
		border: none;
		caret-color: $primary-color;
		transition: $fast-animation ease-in-out;
		width: 90%;
	}

	&:hover {
		border-bottom: 1px solid $primary-color;
		background-color: lighten($color: $foreground-color, $amount: 2%);
	}

	&[aria-selected='true'] {
		border-bottom: 1px solid $primary-color;

		p {
			color: $primary-color;
			opacity: 1;
			
			&.unit { color: $text-color; }
		}
	}

	&[non-empty='true'] {
		p.label {
			transform: translate($padding * 2, -0.75em) scale(0.75);
		}
	}
}

%header-image {
	position: absolute;
	top: 0;
	left: 0;
	width: 100vw;

	img,
	div {
		position: absolute;
		width: 100%;
		object-fit: cover;
		aspect-ratio: 3/2;

		@media only screen and (orientation: landscape) {
			aspect-ratio: 5/1;
		}
	}

	div {
		background: linear-gradient(-110deg, hsla(0, 0%, 0%, 0) 35%, 40%, hsla(0, 0%, 0%, 0.712));
		display: grid;
		grid-template-rows: 1fr auto;
		align-items: center;

		h1 {
			margin: 0;
			margin-left: $padding-large;
			max-width: 60%;
			font-size: $h1-size;
			font-weight: 600;
		}
		p {
			margin: $padding;
			max-width: 80%;
		}
	}
}

%header-image-margin {
	margin-top: 100vw * 0.66 !important;
	@media only screen and (orientation: landscape) {
		margin-top: 100vw * 0.2 !important;
	}
}

button {
	background: none;
	color: $text-color;
	border: none;
	font-size: $h3-size;
}

p {
	font-size: $h3-size;
	margin: 0;
}

h2 {
	font-size: $h2-size;
	margin: 0;
	padding-top: $padding;
}

figure {
	position: relative;
	margin: 0;
}
